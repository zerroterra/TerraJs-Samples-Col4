import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { MsgVote } from './MsgVote';
/**
 * Weighted vote for a proposal
 */
export declare class MsgVoteWeighted extends JSONSerializable<MsgVoteWeighted.Data> {
    proposal_id: number;
    voter: AccAddress;
    options: MsgVoteWeighted.Options;
    /**
     * @param proposal_id ID of proposal to vote on
     * @param voter voter's account address
     * @param option one of voting options
     */
    constructor(proposal_id: number, voter: AccAddress, options: MsgVoteWeighted.Options);
    static fromData(data: MsgVoteWeighted.Data): MsgVoteWeighted;
    toData(): MsgVoteWeighted.Data;
}
export declare namespace MsgVoteWeighted {
    type Options = {
        option: MsgVote.Option;
        weight: string;
    }[];
    interface Data {
        type: 'gov/MsgVoteWeighted';
        value: {
            proposal_id: string;
            voter: AccAddress;
            options: Options;
        };
    }
}
